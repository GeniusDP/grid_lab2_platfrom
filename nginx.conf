server {
    listen 80;
    server_name _; # Отвечать на любые домены

    # -----------------------------------------------
    # 1. Маршрут для API (бэкенд)
    # -----------------------------------------------
    # Все запросы, начинающиеся с /api/
    location /api/ {
        # proxy_pass указывает на сервис 'nodejs' и порт '8080'
        #
        # ВАЖНО:
        # 1. БЕЗ слеша в конце (http://nodejs:8080):
        #    /api/users -> http://nodejs:8080/api/users
        #
        # 2. СО слешем в конце (http://nodejs:8080/):
        #    /api/users -> http://nodejs:8080/users (отрезает /api/)
        #
        # Выберите вариант, который нужен вашему бэкенду. 
        # Я оставлю первый, он самый частый.
        proxy_pass http://nodejs:8080/;

        # Стандартные заголовки для проксирования
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # -----------------------------------------------
    # 2. Маршрут для всего остального (фронтенд)
    # -----------------------------------------------
    location / {
        # proxy_pass указывает на сервис 'react' и порт '80'
        proxy_pass http://react:80;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Это нужно для WebSocket (например, для Hot-Reload в React)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}